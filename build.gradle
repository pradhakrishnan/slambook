buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
    	mavenLocal()
        mavenCentral()
        
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 

jar {
    baseName = 'slambook'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jetty:1.2.2.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-actuator:1.2.2.RELEASE")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf:1.2.2.RELEASE")
   	compile("org.springframework.social:spring-social-facebook:2.0.1.RELEASE")
   	compile("org.springframework.boot:spring-boot-starter-security:1.2.2.RELEASE")
   	compile("org.springframework.boot:spring-boot-starter-data-mongodb")
   	compile("org.slambook.mongoservice:slambook-mongoservice:1.0-SNAPSHOT")
   	compile("org.springframework:spring-websocket:4.1.5.RELEASE")
   	compile("org.apache.kafka:kafka_2.10:0.8.2.0")
   	compile("com.google.guava:guava:19.0-rc1")
   	testCompile("org.springframework.boot:spring-boot-starter-test") 
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}


